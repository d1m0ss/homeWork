## Complete exercise

### NORMAL level

#### Task 1 💻

Создать любой обьект с двумя ключами и любыми значениями в них, а затем удалить ключи из обьекта. 

#### Task 2 🖥

Создать любой обьект с двумя ключами и любыми значениями в них, а затем проверить есть ли в обьекте определенный ключ и если есть вывести в консоль **true**


#### Task 4 🖥

Дан обьект:

```javascript
const colors = {
    'ru pum pu ru rum': {
        red: 'красный',
        green: 'зеленый',
        blue: 'синий'
    },
};
```

Вывести в консоль слово красный и синий

#### Task 5 🖥

Дан обьект:

```javascript
    let salaries = {
        andrey: 500,
        sveta: 413,
        anton: 987,
        andrey: 664,
        alexandra: 199
    }
```
Вычислите среднюю зарплату сотрудников и результат поместите в соответствующую переменную

#### Task 6 🖥

Создать валидатор, запросить у пользователя логин и пароль для регистрации. Затем данные записать в обьект. 
Потом попросить пользователя подтвердить данные. Если верно введен логин и пароль, вывести сообщение **Добро пожалоВать**. 


### ADVANCED level

#### Task 1 👨‍🏫

Мы на футбольном матче, счет забитых голов одной команды не может превышать 9 мячей. Жаль что нам присылают результат матча в формате '2:5',
 ведь нам надо это вывести в консоль словами. Давайте напишем программу которая будет за нас переводить формат и выводить результат в консоль. 

#### Task 2 🖥

Даны два одинаковых обьекта. Сравните их так чтобы они были равны

```javascript
    let student1 = {
        name: 'Polina',
        age: 27,
    }

    let student2 = {
        name: 'Polina',
        age: 27,
    }
```



### NORMAL level

#### Task 1 🖥

Выведи все элементы массива в консоль с помощью метода **`forEach`**

```javascript
    const fibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987]
```

> Реализуйте решение двумя способами, используя `function declaration` & `arrow function`

#### Task 2 🖥

Используя метод **`map`** создайте новый массив, на основе массива **`users`**, в котором каждый элемент массива будет содержать строку вида:

> ['member 1: Darya', 'member 2: Masha', ... etc]

```javascript
    const users = ['Darya', 'Masha', 'Denis', 'Vitaliy', 'Polina', 'Anton']
```

> Реализуйте решение двумя способами, используя `function declaration` & `arrow function`.

#### Task 3 🖥

С помощью метода **`filter`** создайте новый массив в котором не будет отрицательных чисел.

```javascript
    const numbers = [7, -4, 32, -90, 54, 32, -21]
```

> Реализуйте решение двумя способами, используя `function declaration` & `arrow function`.

#### Task 4 🖥

Используя метод **`reduce`** получите сумму всех чисел массива.

```javascript
    const fibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987]
```

> Реализуйте решение двумя способами, используя `function declaration` & `arrow function`.

#### Task 5 🖥

Используя метод **`find`** найдите в массиве первое четное число.

```javascript
    const numbers = [5, 9, 13, 24, 54, 10, 13, 99, 1, 5]
```

> Реализуйте решение двумя способами, используя `function declaration` & `arrow function`.

### ADVANCED level

#### Task 2 👨‍🏫 Тролли атакуют наш раздел с комментариями!!!

+ Единственный способ справиться с этой ситуацией - удалить все гласные из комментариев троллей, нейтрализуя угрозу.
+ Ваша задача - написать функцию, которая принимает строку и возвращает новую строку с удаленными гласными.
+ Например, строка «This website is for losers LOL!» станет "Ths wbst s fr lsrs LL!".

#### Task 3 👨‍🏫 Нет истории, нет теории

+ В приведенных ниже примерах показано, как написать функцию:

```javascript
    accum("abcd") -> "A-Bb-Ccc-Dddd"
    accum("RqaEzty") -> "R-Qq-Aaa-Eeee-Zzzzz-Tttttt-Yyyyyyy"
    accum("cwAt") -> "C-Ww-Aaa-Tttt"